{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/providers/react-intl-provider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { IntlProvider, useIntl as useReactIntl } from \"react-intl\";\r\nimport { getCookie } from \"cookies-next\";\r\n\r\n// Import translation files\r\nimport enMessages from \"@/locales/en.json\";\r\nimport esMessages from \"@/locales/es.json\";\r\nimport frMessages from \"@/locales/fr.json\";\r\nimport deMessages from \"@/locales/de.json\";\r\nimport urMessages from \"@/locales/ur.json\";\r\nimport { ensureTranslation } from \"@/app/i18n-client\";\r\n\r\n// Define RTL locales directly here since we removed them from middleware\r\nexport const rtlLocales = [\"ur\"];\r\n\r\n// Define supported locales\r\nexport const supportedLocales = [\"en\", \"es\", \"fr\", \"de\", \"ur\"] as const;\r\nexport type SupportedLocale = (typeof supportedLocales)[number];\r\n\r\n// Ensure critical translations are available\r\nensureTranslation(\"app.title\", \"Sindh Ombudsman\");\r\nensureTranslation(\"app.version\", \"Version 1.0.0\");\r\n\r\n// Load all translation messages\r\nconst messages: Record<SupportedLocale, Record<string, string>> = {\r\n  en: enMessages,\r\n  es: esMessages,\r\n  fr: frMessages,\r\n  de: deMessages,\r\n  ur: urMessages,\r\n};\r\n\r\n// Define an interface for IntlError\r\ninterface IntlErrorType {\r\n  code: string;\r\n  message: string;\r\n}\r\n\r\n// Detect default locale\r\nfunction getDefaultLocale(): SupportedLocale {\r\n  // First try to get from cookie\r\n  const savedLocale = getCookie(\"NEXT_LOCALE\");\r\n  if (\r\n    savedLocale &&\r\n    supportedLocales.includes(savedLocale.toString() as SupportedLocale)\r\n  ) {\r\n    return savedLocale.toString() as SupportedLocale;\r\n  }\r\n\r\n  // Then try browser language\r\n  if (typeof window !== \"undefined\") {\r\n    const browserLocale = navigator.language.split(\"-\")[0];\r\n    if (supportedLocales.includes(browserLocale as SupportedLocale)) {\r\n      return browserLocale as SupportedLocale;\r\n    }\r\n  }\r\n\r\n  // Default to English\r\n  return \"en\";\r\n}\r\n\r\n// Define our context types\r\ninterface IntlContextType {\r\n  locale: SupportedLocale;\r\n  direction: \"rtl\" | \"ltr\";\r\n  setLocale: (locale: SupportedLocale) => void;\r\n}\r\n\r\n// Create context\r\nconst IntlContext = createContext<IntlContextType | undefined>(undefined);\r\n\r\n// Create a hook to use the context\r\nexport function useIntl() {\r\n  const context = useContext(IntlContext);\r\n  if (!context) {\r\n    throw new Error(\"useIntl must be used within a ReactIntlProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\n// Provider component\r\nexport function ReactIntlProvider({ children }: { children: React.ReactNode }) {\r\n  // Use state to track if we're rendering on client side to avoid hydration mismatch\r\n  const [isClient, setIsClient] = useState(false);\r\n  const [locale, setLocaleState] = useState<SupportedLocale>(\"en\"); // Start with default locale\r\n\r\n  // After first render, update with actual locale preference and mark as client-side\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n    setLocaleState(getDefaultLocale());\r\n  }, []);\r\n\r\n  // Set direction based on locale\r\n  const direction = rtlLocales.includes(locale) ? \"rtl\" : \"ltr\";\r\n\r\n  // Effect to set HTML dir attribute\r\n  useEffect(() => {\r\n    document.documentElement.dir = direction;\r\n    document.documentElement.lang = locale;\r\n  }, [locale, direction]);\r\n\r\n  // Function to change locale\r\n  const setLocale = (newLocale: SupportedLocale) => {\r\n    setLocaleState(newLocale);\r\n  };\r\n\r\n  // Handle errors with missing translations\r\n  const handleIntlError = (error: IntlErrorType) => {\r\n    // Only log in development, suppress in production\r\n    if (\r\n      process.env.NODE_ENV === \"development\" &&\r\n      error.code === \"MISSING_TRANSLATION\"\r\n    ) {\r\n      console.warn(`[i18n] ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Render with client-side values only after hydration\r\n  return (\r\n    <IntlContext.Provider\r\n      value={{\r\n        locale,\r\n        direction,\r\n        setLocale,\r\n      }}\r\n    >\r\n      <IntlProvider\r\n        locale={locale}\r\n        messages={isClient ? messages[locale] : messages.en}\r\n        onError={handleIntlError}\r\n        defaultLocale=\"en\"\r\n      >\r\n        {children}\r\n      </IntlProvider>\r\n    </IntlContext.Provider>\r\n  );\r\n}\r\n\r\n// Export useReactIntl for direct access to its functions\r\nexport { useReactIntl };\r\n"],"names":[],"mappings":";;;;;;AAgHM;;AA9GN;AACA;AACA;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;;;;;;;AAXA;;;;;;;;;;AAeO,MAAM,aAAa;IAAC;CAAK;AAGzB,MAAM,mBAAmB;IAAC;IAAM;IAAM;IAAM;IAAM;CAAK;AAG9D,6CAA6C;AAC7C,kBAAkB,aAAa;AAC/B,kBAAkB,eAAe;AAEjC,gCAAgC;AAChC,MAAM,WAA4D;IAChE,IAAI,4FAAA,CAAA,UAAU;IACd,IAAI,4FAAA,CAAA,UAAU;IACd,IAAI,4FAAA,CAAA,UAAU;IACd,IAAI,4FAAA,CAAA,UAAU;IACd,IAAI,4FAAA,CAAA,UAAU;AAChB;AAQA,wBAAwB;AACxB,SAAS;IACP,+BAA+B;IAC/B,MAAM,cAAc,CAAA,GAAA,kJAAA,CAAA,YAAS,AAAD,EAAE;IAC9B,IACE,eACA,iBAAiB,QAAQ,CAAC,YAAY,QAAQ,KAC9C;QACA,OAAO,YAAY,QAAQ;IAC7B;IAEA,4BAA4B;IAC5B,wCAAmC;QACjC,MAAM,gBAAgB,UAAU,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QACtD,IAAI,iBAAiB,QAAQ,CAAC,gBAAmC;YAC/D,OAAO;QACT;IACF;IAEA,qBAAqB;IACrB,OAAO;AACT;AASA,iBAAiB;AACjB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAGxD,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANgB;AAST,SAAS,kBAAkB,EAAE,QAAQ,EAAiC;;IAC3E,mFAAmF;IACnF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,QAAQ,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,OAAO,4BAA4B;IAE9F,mFAAmF;IACnF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,YAAY;YACZ,eAAe;QACjB;sCAAG,EAAE;IAEL,gCAAgC;IAChC,MAAM,YAAY,WAAW,QAAQ,CAAC,UAAU,QAAQ;IAExD,mCAAmC;IACnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,SAAS,eAAe,CAAC,GAAG,GAAG;YAC/B,SAAS,eAAe,CAAC,IAAI,GAAG;QAClC;sCAAG;QAAC;QAAQ;KAAU;IAEtB,4BAA4B;IAC5B,MAAM,YAAY,CAAC;QACjB,eAAe;IACjB;IAEA,0CAA0C;IAC1C,MAAM,kBAAkB,CAAC;QACvB,kDAAkD;QAClD,IACE,oDAAyB,iBACzB,MAAM,IAAI,KAAK,uBACf;YACA,QAAQ,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;QACxC;IACF;IAEA,sDAAsD;IACtD,qBACE,6LAAC,YAAY,QAAQ;QACnB,OAAO;YACL;YACA;YACA;QACF;kBAEA,cAAA,6LAAC,mNAAA,CAAA,eAAY;YACX,QAAQ;YACR,UAAU,WAAW,QAAQ,CAAC,OAAO,GAAG,SAAS,EAAE;YACnD,SAAS;YACT,eAAc;sBAEb;;;;;;;;;;;AAIT;IAvDgB;KAAA","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/store/auth/auth.slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AuthState, User } from \"@/types/user.types\";\r\n\r\n// Function to get initial state from localStorage\r\nconst getInitialState = (): AuthState => {\r\n  // Check if window exists (for server-side rendering)\r\n  if (typeof window !== \"undefined\") {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      const userString = localStorage.getItem(\"user\");\r\n\r\n      if (token && userString) {\r\n        const user = JSON.parse(userString);\r\n        return {\r\n          user,\r\n          token,\r\n          refreshToken,\r\n          loading: false,\r\n          error: null,\r\n          registrationSuccess: false,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error parsing user from localStorage:\", error);\r\n    }\r\n  }\r\n\r\n  // Default initial state if no user found in localStorage\r\n  return {\r\n    user: null,\r\n    token: null,\r\n    refreshToken: null,\r\n    loading: false,\r\n    error: null,\r\n    registrationSuccess: false,\r\n  };\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: getInitialState(),\r\n  reducers: {\r\n    // Login actions\r\n    login: (state, _: PayloadAction<{ email: string; password: string }>) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (\r\n      state,\r\n      action: PayloadAction<{ user: User; token: string; refreshToken: string }>\r\n    ) => {\r\n      state.loading = false;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.refreshToken = action.payload.refreshToken;\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Register actions\r\n    register: (\r\n      state,\r\n      _: PayloadAction<{\r\n        name: string;\r\n        email: string;\r\n        password: string;\r\n        role?: string;\r\n      }>\r\n    ) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n      state.registrationSuccess = false;\r\n    },\r\n    registerSuccess: (\r\n      state,\r\n      _: PayloadAction<{ user: User; token: string; refreshToken: string }>\r\n    ) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n      state.registrationSuccess = true;\r\n      // Don't set user and token on registration success\r\n    },\r\n    registerFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n      state.registrationSuccess = false;\r\n    },\r\n\r\n    // Logout actions\r\n    logout: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    logoutSuccess: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.refreshToken = null;\r\n      state.error = null;\r\n      state.registrationSuccess = false;\r\n      state.loading = false;\r\n\r\n      // Also clear localStorage and sessionStorage\r\n      if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"user\");\r\n      }\r\n    },\r\n    logoutFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Refresh token actions\r\n    refreshToken: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    refreshTokenSuccess: (\r\n      state,\r\n      action: PayloadAction<{ token: string; refreshToken: string }>\r\n    ) => {\r\n      state.loading = false;\r\n      state.token = action.payload.token;\r\n      state.refreshToken = action.payload.refreshToken;\r\n      state.error = null;\r\n    },\r\n    refreshTokenFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Other actions\r\n    setUser: (state, action: PayloadAction<User>) => {\r\n      state.user = action.payload;\r\n    },\r\n    resetRegistration: (state) => {\r\n      state.registrationSuccess = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  login,\r\n  loginSuccess,\r\n  loginFailure,\r\n  register,\r\n  registerSuccess,\r\n  registerFailure,\r\n  logout,\r\n  logoutSuccess,\r\n  logoutFailure,\r\n  refreshToken,\r\n  refreshTokenSuccess,\r\n  refreshTokenFailure,\r\n  setUser,\r\n  resetRegistration,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/store/slices/drawerSlice.ts"],"sourcesContent":["// store/slices/drawerSlice.ts\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ReactNode } from \"react\";\r\n\r\nexport interface DrawerState {\r\n  isOpen: boolean;\r\n  title: string;\r\n  contentType?: string;\r\n  contentProps?: Record<string, unknown>;\r\n  content?: ReactNode;\r\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"full\";\r\n  isOverlayClose?: boolean;\r\n}\r\n\r\nconst initialState: DrawerState = {\r\n  isOpen: false,\r\n  title: \"\",\r\n  contentType: \"\",\r\n  contentProps: {},\r\n  content: null,\r\n  size: \"md\",\r\n  isOverlayClose: true,\r\n};\r\n\r\nexport const drawerSlice = createSlice({\r\n  name: \"drawer\",\r\n  initialState,\r\n  reducers: {\r\n    openDrawer: (state, action: PayloadAction<Omit<DrawerState, \"isOpen\">>) => {\r\n      state.isOpen = true;\r\n      state.title = action.payload.title;\r\n      state.contentType = action.payload.contentType || \"\";\r\n      state.contentProps = action.payload.contentProps || {};\r\n      state.content = action.payload.content || null;\r\n      state.size = action.payload.size || \"md\";\r\n      state.isOverlayClose =\r\n        action.payload.isOverlayClose !== undefined\r\n          ? action.payload.isOverlayClose\r\n          : true;\r\n    },\r\n    closeDrawer: (state) => {\r\n      state.isOpen = false;\r\n      state.contentType = \"\";\r\n      state.contentProps = {};\r\n      state.content = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openDrawer, closeDrawer } = drawerSlice.actions;\r\nexport default drawerSlice.reducer;\r\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;;;;AAC9B;;AAaA,MAAM,eAA4B;IAChC,QAAQ;IACR,OAAO;IACP,aAAa;IACb,cAAc,CAAC;IACf,SAAS;IACT,MAAM;IACN,gBAAgB;AAClB;AAEO,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACrC,MAAM;IACN;IACA,UAAU;QACR,YAAY,CAAC,OAAO;YAClB,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK;YAClC,MAAM,WAAW,GAAG,OAAO,OAAO,CAAC,WAAW,IAAI;YAClD,MAAM,YAAY,GAAG,OAAO,OAAO,CAAC,YAAY,IAAI,CAAC;YACrD,MAAM,OAAO,GAAG,OAAO,OAAO,CAAC,OAAO,IAAI;YAC1C,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI,IAAI;YACpC,MAAM,cAAc,GAClB,OAAO,OAAO,CAAC,cAAc,KAAK,YAC9B,OAAO,OAAO,CAAC,cAAc,GAC7B;QACR;QACA,aAAa,CAAC;YACZ,MAAM,MAAM,GAAG;YACf,MAAM,WAAW,GAAG;YACpB,MAAM,YAAY,GAAG,CAAC;YACtB,MAAM,OAAO,GAAG;QAClB;IACF;AACF;AAEO,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,YAAY,OAAO;uCAC/C,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/services/api/axios.config.ts"],"sourcesContent":["import axios, {\r\n  AxiosError,\r\n  AxiosResponse,\r\n  InternalAxiosRequestConfig,\r\n} from \"axios\";\r\nimport { refreshTokenFailure } from \"@/store/auth/auth.slice\";\r\nimport { store } from \"@/store/store\";\r\n\r\n// Update the API_URL to include /api if not present\r\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3000/\";\r\n\r\nconsole.log(\"API URL:\", API_URL); // Debug log\r\n\r\n// Ensure API_URL is properly formed\r\nconst normalizedUrl = API_URL.endsWith(\"/\") ? API_URL : `${API_URL}/`;\r\nconsole.log(\"Normalized API URL:\", normalizedUrl);\r\n\r\ninterface CustomAxiosRequestConfig extends InternalAxiosRequestConfig {\r\n  _retry?: boolean;\r\n}\r\n\r\ninterface ApiErrorResponse {\r\n  message?: string;\r\n  statusCode?: number;\r\n  error?: string;\r\n  errors?: Array<{ message: string }>;\r\n  detail?: string;\r\n  [key: string]: unknown; // Allow additional properties with unknown type\r\n}\r\n\r\ninterface CustomError {\r\n  message: string;\r\n  status: number;\r\n  data?: unknown;\r\n}\r\n\r\ninterface RefreshTokenResponse {\r\n  token: string;\r\n  refreshToken: string;\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: normalizedUrl,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  timeout: 15000, // 15 second timeout\r\n});\r\n\r\n// Request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config: InternalAxiosRequestConfig) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    console.log(\"Making request to:\", `${config.baseURL}${config.url}`, {\r\n      method: config.method?.toUpperCase(),\r\n      headers: config.headers,\r\n      data: config.data ? \"Data present\" : \"No data\",\r\n    });\r\n    return config;\r\n  },\r\n  (error: AxiosError) => {\r\n    console.error(\"Request interceptor error:\", error);\r\n    return Promise.reject({\r\n      message: \"Failed to set up the request\",\r\n      status: 500,\r\n      data: error,\r\n    });\r\n  }\r\n);\r\n\r\n// Response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response: AxiosResponse) => {\r\n    console.log(\"Response received:\", {\r\n      status: response.status,\r\n      url: response.config.url,\r\n      dataSize: response.data ? JSON.stringify(response.data).length : 0,\r\n    });\r\n    return response;\r\n  },\r\n  async (error: AxiosError<ApiErrorResponse>) => {\r\n    console.error(\"Response error:\", {\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      url: error.config?.url,\r\n      method: error.config?.method?.toUpperCase(),\r\n      data: error.response?.data || \"No response data\",\r\n    });\r\n\r\n    // If there's no error object, return a generic error\r\n    if (!error) {\r\n      return Promise.reject({\r\n        message: \"An unknown error occurred\",\r\n        status: 500,\r\n      });\r\n    }\r\n\r\n    const originalRequest = error.config as CustomAxiosRequestConfig;\r\n\r\n    // Handle 401 Unauthorized\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      // Try to refresh the token only once\r\n      if (originalRequest) {\r\n        originalRequest._retry = true;\r\n\r\n        try {\r\n          // Try to get a new token\r\n          const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n          if (!refreshToken) {\r\n            // No refresh token available, proceed with logout\r\n            handleLogout();\r\n            return Promise.reject({\r\n              message: \"Session expired. Please login again.\",\r\n              status: 401,\r\n            });\r\n          }\r\n\r\n          // Call refresh token endpoint\r\n          const response = await axios.post<RefreshTokenResponse>(\r\n            `${API_URL}/auth/refresh-token`,\r\n            { refreshToken }\r\n          );\r\n\r\n          // Update tokens\r\n          const { token, refreshToken: newRefreshToken } = response.data;\r\n          localStorage.setItem(\"token\", token);\r\n          localStorage.setItem(\"refreshToken\", newRefreshToken);\r\n\r\n          // Update Authorization header\r\n          originalRequest.headers.Authorization = `Bearer ${token}`;\r\n\r\n          // Retry the original request\r\n          return axiosInstance(originalRequest);\r\n        } catch (refreshError) {\r\n          console.error(\"Token refresh failed:\", refreshError);\r\n          // Refresh token failed, proceed with logout\r\n          handleLogout();\r\n          return Promise.reject({\r\n            message: \"Session expired. Please login again.\",\r\n            status: 401,\r\n          });\r\n        }\r\n      }\r\n\r\n      // If originalRequest is undefined (shouldn't happen normally)\r\n      handleLogout();\r\n      return Promise.reject({\r\n        message: \"Session expired. Please login again.\",\r\n        status: 401,\r\n      });\r\n    }\r\n\r\n    // If we have a response from the server\r\n    if (error.response) {\r\n      // Extract more detailed error information\r\n      const serverError = error.response.data;\r\n      console.error(\"Detailed API error:\", {\r\n        status: error.response.status,\r\n        statusText: error.response.statusText,\r\n        data: serverError,\r\n        url: error.config?.url,\r\n        method: error.config?.method,\r\n      });\r\n\r\n      // Add special handling for 500 errors\r\n      if (error.response.status === 500) {\r\n        console.error(\"SERVER ERROR 500! Request details:\", {\r\n          url: `${error.config?.baseURL}${error.config?.url}`,\r\n          method: error.config?.method?.toUpperCase(),\r\n          headers: error.config?.headers,\r\n          data: error.config?.data\r\n            ? JSON.parse(String(error.config.data))\r\n            : null,\r\n          params: error.config?.params,\r\n        });\r\n\r\n        if (\r\n          serverError &&\r\n          typeof serverError === \"object\" &&\r\n          \"stack\" in serverError\r\n        ) {\r\n          console.error(\"Server stack trace:\", serverError.stack);\r\n        }\r\n      }\r\n\r\n      // Format a more user-friendly error message\r\n      let errorMessage = \"Server error\";\r\n\r\n      if (typeof serverError === \"string\") {\r\n        errorMessage = serverError;\r\n      } else if (serverError && typeof serverError === \"object\") {\r\n        // Try to extract error message from various common API error formats\r\n        errorMessage =\r\n          serverError.message ||\r\n          serverError.error ||\r\n          serverError.errors?.[0]?.message ||\r\n          serverError.detail ||\r\n          error.message ||\r\n          \"Unknown server error\";\r\n      }\r\n\r\n      const customError: CustomError = {\r\n        message: errorMessage,\r\n        status: error.response.status,\r\n        data: serverError,\r\n      };\r\n\r\n      return Promise.reject(customError);\r\n    }\r\n\r\n    // If the request was made but no response was received\r\n    if (error.request) {\r\n      const customError: CustomError = {\r\n        message:\r\n          \"No response from server. Please check if the server is running.\",\r\n        status: 503,\r\n        data: { originalError: error.message },\r\n      };\r\n      console.error(\"Network error details:\", customError);\r\n      return Promise.reject(customError);\r\n    }\r\n\r\n    // Something happened in setting up the request\r\n    const customError: CustomError = {\r\n      message: error.message || \"Failed to make the request\",\r\n      status: 500,\r\n      data: { originalError: error.toJSON() },\r\n    };\r\n    console.error(\"Request setup error details:\", customError);\r\n    return Promise.reject(customError);\r\n  }\r\n);\r\n\r\n// Helper function to handle logout\r\nfunction handleLogout() {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"refreshToken\");\r\n  localStorage.removeItem(\"user\");\r\n\r\n  // Also dispatch a logout action to update Redux state\r\n  if (store) {\r\n    store.dispatch(refreshTokenFailure(\"Session expired\"));\r\n  }\r\n\r\n  // Redirect to login page\r\n  window.location.href = \"/auth/login\";\r\n}\r\n\r\nexport default axiosInstance;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/services/api/auth.service.ts"],"sourcesContent":["import {\r\n  AuthResponse,\r\n  LoginCredentials,\r\n  RegisterCredentials,\r\n  RefreshTokenResponse,\r\n  ChangePasswordRequest,\r\n  ChangePasswordResponse,\r\n} from \"@/types/user.types\";\r\nimport axiosInstance from \"./axios.config\";\r\n\r\nexport class AuthService {\r\n  static async login(credentials: LoginCredentials): Promise<AuthResponse> {\r\n    try {\r\n      console.log(\"Login request initiated for:\", credentials.email);\r\n\r\n      const response = await axiosInstance.post<AuthResponse>(\r\n        \"auth/login\",\r\n        credentials\r\n      );\r\n\r\n      // Check if response includes a user with inactive status\r\n      if (response.data?.user?.status === false) {\r\n        console.warn(\"Login attempt by inactive user:\", credentials.email);\r\n        // We'll let the saga handle this, but we won't store the tokens\r\n      } else {\r\n        // Store tokens and user data in localStorage only for active users\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"refreshToken\", response.data.refreshToken);\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify({\r\n              ...response.data.user,\r\n              // Ensure status is included\r\n              status: response.data.user.status ?? true,\r\n            })\r\n          );\r\n        }\r\n      }\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async register(\r\n    credentials: RegisterCredentials\r\n  ): Promise<AuthResponse> {\r\n    try {\r\n      console.log(\"Register request initiated for:\", credentials.email);\r\n\r\n      const response = await axiosInstance.post<AuthResponse>(\r\n        \"auth/register\",\r\n        credentials\r\n      );\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Register error:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async refreshToken(\r\n    refreshToken: string\r\n  ): Promise<RefreshTokenResponse> {\r\n    try {\r\n      const response = await axiosInstance.post<RefreshTokenResponse>(\r\n        \"auth/refresh-token\",\r\n        { refreshToken }\r\n      );\r\n\r\n      // Update tokens in localStorage\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        localStorage.setItem(\"refreshToken\", response.data.refreshToken);\r\n      }\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async logout(): Promise<void> {\r\n    try {\r\n      // For JWT, we just need to clear the local storage\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n      localStorage.removeItem(\"user\");\r\n      sessionStorage.clear();\r\n\r\n      // Optional: Call a server-side logout endpoint if needed\r\n      // await axiosInstance.post(\"/auth/logout\");\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getCurrentUser(): Promise<AuthResponse> {\r\n    try {\r\n      // For JWT, we can get the user from localStorage\r\n      const userJson = localStorage.getItem(\"user\");\r\n      if (!userJson) {\r\n        throw new Error(\"User not found in local storage\");\r\n      }\r\n\r\n      const user = JSON.parse(userJson);\r\n      const token = localStorage.getItem(\"token\");\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n      if (!token || !refreshToken) {\r\n        throw new Error(\"Authentication tokens not found\");\r\n      }\r\n\r\n      return {\r\n        user,\r\n        token,\r\n        refreshToken,\r\n        success: true,\r\n        message: \"User retrieved from local storage\",\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Get current user error:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async changePassword(\r\n    data: ChangePasswordRequest\r\n  ): Promise<ChangePasswordResponse> {\r\n    try {\r\n      console.log(\"Change password request initiated\");\r\n\r\n      // Get the token from localStorage\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        throw new Error(\"Authentication required. Please log in again.\");\r\n      }\r\n\r\n      const response = await axiosInstance.post<ChangePasswordResponse>(\r\n        \"auth/change-password\",\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Password changed successfully\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Change password error:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService();\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/store/auth/auth.saga.ts"],"sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { SagaIterator } from \"redux-saga\";\r\nimport {\r\n  login,\r\n  loginFailure,\r\n  loginSuccess,\r\n  register,\r\n  registerFailure,\r\n  registerSuccess,\r\n  logout,\r\n  logoutSuccess,\r\n  logoutFailure,\r\n  refreshToken,\r\n  refreshTokenSuccess,\r\n  refreshTokenFailure,\r\n} from \"./auth.slice\";\r\nimport {\r\n  LoginCredentials,\r\n  RegisterCredentials,\r\n  AuthResponse,\r\n  RefreshTokenResponse,\r\n} from \"@/types/user.types\";\r\nimport { AuthService } from \"@/services/api/auth.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Define a custom error interface\r\ninterface ApiError {\r\n  message: string;\r\n  status?: number;\r\n  code?: string;\r\n}\r\n\r\nfunction* loginSaga(\r\n  action: PayloadAction<LoginCredentials>\r\n): SagaIterator<void> {\r\n  try {\r\n    console.log(\"Processing login request in saga...\");\r\n\r\n    const response: AuthResponse = yield call(\r\n      AuthService.login,\r\n      action.payload\r\n    );\r\n\r\n    console.log(\"Login successful, checking user status...\");\r\n\r\n    // Check if user is inactive before updating the store\r\n    if (response.user && response.user.status === false) {\r\n      console.log(\"Login attempt by inactive user\");\r\n      yield put(\r\n        loginFailure(\r\n          \"Account is inactive. Please contact the administrator to activate your account.\"\r\n        )\r\n      );\r\n      toast.error(\r\n        \"Account is inactive. Please contact the administrator to activate your account.\"\r\n      );\r\n      return; // Exit early - don't update store with inactive user's data\r\n    }\r\n\r\n    console.log(\"User is active, updating store...\");\r\n\r\n    // Add status property to user object to match User type if not present\r\n    yield put(\r\n      loginSuccess({\r\n        user: { ...response.user, status: response.user.status ?? true },\r\n        token: response.token,\r\n        refreshToken: response.refreshToken,\r\n      })\r\n    );\r\n    console.log(\"Redux store updated with login success\");\r\n\r\n    // Using window.location.href for a full page reload which can help with state reset issues\r\n    window.location.href = \"/dashboard\";\r\n  } catch (error: unknown) {\r\n    console.error(\"Login saga error:\", error);\r\n\r\n    // Cast to our custom error type or use a safe fallback\r\n    const apiError = error as ApiError;\r\n\r\n    // Check specifically for inactive user error or other specific errors\r\n    if (apiError.message && apiError.message.includes(\"User is inactive\")) {\r\n      console.log(\"Login attempt by inactive user\");\r\n      yield put(\r\n        loginFailure(\r\n          \"Account is inactive. Please contact the administrator to activate your account.\"\r\n        )\r\n      );\r\n      toast.error(\r\n        \"Account is inactive. Please contact the administrator to activate your account.\"\r\n      );\r\n    } else {\r\n      yield put(loginFailure(apiError.message || \"Login failed\"));\r\n      toast.error(apiError.message || \"Login failed\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction* registerSaga(\r\n  action: PayloadAction<RegisterCredentials>\r\n): SagaIterator<void> {\r\n  try {\r\n    console.log(\"Processing registration request...\");\r\n\r\n    const response: AuthResponse = yield call(\r\n      AuthService.register,\r\n      action.payload\r\n    );\r\n\r\n    // Do not store authentication data after registration\r\n    // User should log in explicitly\r\n    console.log(\"Registration successful\");\r\n\r\n    // Add status property to user object to match User type\r\n    yield put(\r\n      registerSuccess({\r\n        user: { ...response.user, status: true },\r\n        token: response.token,\r\n        refreshToken: response.refreshToken,\r\n      })\r\n    );\r\n    toast.success(\"Registration successful! Please login.\");\r\n\r\n    // Redirect to login page after successful registration\r\n    window.location.href = \"/auth/login\";\r\n  } catch (error: unknown) {\r\n    console.error(\"Registration saga error:\", error);\r\n    const apiError = error as ApiError;\r\n    yield put(registerFailure(apiError.message || \"Registration failed\"));\r\n    toast.error(apiError.message || \"Registration failed\");\r\n  }\r\n}\r\n\r\nfunction* logoutSaga(): SagaIterator<void> {\r\n  try {\r\n    console.log(\"Processing logout in saga...\");\r\n\r\n    // Call service to clear localStorage\r\n    yield call(AuthService.logout);\r\n    console.log(\"Local storage cleared\");\r\n\r\n    yield put(logoutSuccess());\r\n    console.log(\"Logout success action dispatched\");\r\n\r\n    // Redirect to login page after logout\r\n    window.location.href = \"/auth/login\";\r\n  } catch (error: unknown) {\r\n    console.error(\"Logout saga error:\", error);\r\n    const apiError = error as ApiError;\r\n    yield put(logoutFailure(apiError.message || \"Logout failed\"));\r\n    toast.error(apiError.message || \"Logout failed\");\r\n\r\n    // Even if the API call fails, we still want to log the user out locally\r\n    yield put(logoutSuccess());\r\n    window.location.href = \"/auth/login\";\r\n  }\r\n}\r\n\r\nfunction* refreshTokenSaga(): SagaIterator<void> {\r\n  try {\r\n    const currentRefreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n    if (!currentRefreshToken) {\r\n      throw new Error(\"No refresh token available\");\r\n    }\r\n\r\n    const response: RefreshTokenResponse = yield call(\r\n      AuthService.refreshToken,\r\n      currentRefreshToken\r\n    );\r\n\r\n    yield put(refreshTokenSuccess(response));\r\n  } catch (error: unknown) {\r\n    const apiError = error as ApiError;\r\n    yield put(refreshTokenFailure(apiError.message || \"Token refresh failed\"));\r\n\r\n    // If refresh token fails, log the user out\r\n    yield put(logout());\r\n  }\r\n}\r\n\r\nexport function* authSaga(): SagaIterator<void> {\r\n  yield takeLatest(login.type, loginSaga);\r\n  yield takeLatest(register.type, registerSaga);\r\n  yield takeLatest(logout.type, logoutSaga);\r\n  yield takeLatest(refreshToken.type, refreshTokenSaga);\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 891, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/store/sagas/index.ts"],"sourcesContent":["// store/sagas/index.ts\r\nimport { all, fork } from \"redux-saga/effects\";\r\nimport { authSaga } from \"../auth/auth.saga\";\r\n\r\n// Example watcher saga\r\nfunction* watchDrawerSaga() {\r\n  // You can put drawer-related saga logic here, e.g., logging, analytics, async actions\r\n  // yield takeEvery('drawer/openDrawer', yourWorkerSaga);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(watchDrawerSaga), fork(authSaga)]);\r\n}\r\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;AACvB;AAAA;AAAA;AACA;;;AAEA,uBAAuB;AACvB,UAAU;AACR,sFAAsF;AACtF,wDAAwD;AAC1D;AAEe,UAAU;IACvB,MAAM,CAAA,GAAA,iMAAA,CAAA,MAAG,AAAD,EAAE;QAAC,CAAA,GAAA,iMAAA,CAAA,OAAI,AAAD,EAAE;QAAkB,CAAA,GAAA,iMAAA,CAAA,OAAI,AAAD,EAAE,uIAAA,CAAA,WAAQ;KAAE;AACnD","debugId":null}},
    {"offset": {"line": 921, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/store/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { all } from \"redux-saga/effects\";\r\nimport authReducer from \"./auth/auth.slice\";\r\nimport drawerReducer from \"./slices/drawerSlice\";\r\nimport { authSaga } from \"./auth/auth.saga\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nfunction* combinedSaga() {\r\n  yield all([authSaga(), rootSaga()]);\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    drawer: drawerReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      thunk: true,\r\n      serializableCheck: {\r\n        // Ignore the non-serializable values in drawer state\r\n        ignoredActions: [\"drawer/openDrawer\"],\r\n        ignoredPaths: [\"drawer.contentProps.onSuccess\", \"drawer.content\"],\r\n      },\r\n    }).concat(sagaMiddleware),\r\n});\r\n\r\nsagaMiddleware.run(combinedSaga);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,wMAAA,CAAA,UAAoB,AAAD;AAE1C,UAAU;IACR,MAAM,CAAA,GAAA,iMAAA,CAAA,MAAG,AAAD,EAAE;QAAC,CAAA,GAAA,uIAAA,CAAA,WAAQ,AAAD;QAAK,CAAA,GAAA,iIAAA,CAAA,UAAQ,AAAD;KAAI;AACpC;AAEO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,wIAAA,CAAA,UAAW;QACjB,QAAQ,wIAAA,CAAA,UAAa;IACvB;IACA,YAAY,CAAC,uBACX,qBAAqB;YACnB,OAAO;YACP,mBAAmB;gBACjB,qDAAqD;gBACrD,gBAAgB;oBAAC;iBAAoB;gBACrC,cAAc;oBAAC;oBAAiC;iBAAiB;YACnE;QACF,GAAG,MAAM,CAAC;AACd;AAEA,eAAe,GAAG,CAAC","debugId":null}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ep-app/my-app/src/providers/Providers.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"@/store/store\";\r\n\r\nexport default function Providers({ children }: { children: React.ReactNode }) {\r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,UAAU,EAAE,QAAQ,EAAiC;IAC3E,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFwB","debugId":null}}]
}